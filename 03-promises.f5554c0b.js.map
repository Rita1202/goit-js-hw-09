{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,QAASC,SAASC,cAAc,kBAChCC,OAAQF,SAASC,cAAc,iBAC/BE,SAAUH,SAASC,cAAc,mBACjCG,UAAWJ,SAASC,cAAc,UAClCI,OAAQL,SAASC,cAAc,SA+BjC,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAtCPV,EAAKO,OAAOW,iBAAiB,SAE7B,SAAyBC,GACvBA,EAAMC,iBAKN,IAJA,IAAMC,EAAQC,OAAOtB,EAAKC,QAAQsB,OAC5BC,EAAOF,OAAOtB,EAAKI,OAAOmB,OAC1BE,EAASH,OAAOtB,EAAKK,SAASkB,OAE3BG,EAAQ,EAAGA,EAAQD,EAAQC,IAClClB,EAAckB,EAAQ,EAAGL,EAAQG,EAAOE,GACrCC,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGjDuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA/B,GAASgC,OAAOI,QACd,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAG9CyB,SAAQ,WACPnC,EAAKC,QAAQsB,MAAQ,GACrBvB,EAAKI,OAAOmB,MAAQ,GACpBvB,EAAKK,SAASkB,MAAQ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  delayEl: document.querySelector('[name=\"delay\"]'),\n  stepEl: document.querySelector('[name=\"step\"]'),\n  amountEl: document.querySelector('[name=\"amount\"]'),\n  submitBtn: document.querySelector('button'),\n  formEl: document.querySelector('form'),\n};\n\nrefs.formEl.addEventListener('click', onSubmitHandler);\n\nfunction onSubmitHandler(event) {\n  event.preventDefault();\n  const delay = Number(refs.delayEl.value);\n  const step = Number(refs.stepEl.value);\n  const amount = Number(refs.amountEl.value);\n\n  for (let index = 0; index < amount; index++) {\n    createPromise(index + 1, delay + step * index)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      })\n      .finally(() => {\n        refs.delayEl.value = '';\n        refs.stepEl.value = '';\n        refs.amountEl.value = '';\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","delayEl","document","querySelector","stepEl","amountEl","submitBtn","formEl","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","index","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","finally"],"version":3,"file":"03-promises.f5554c0b.js.map"}